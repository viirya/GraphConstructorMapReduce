
OUTPUT_DIR=bin
OUTPUT_JAR=build/GraphConstructorMapReduce.jar
SRC = org/viirya/graph/GraphConstructorMapReduce.java org/viirya/graph/GraphConstructorMapReduceMinHash.java org/viirya/graph/GraphConstructorMapReduceMinHashFeature.java org/viirya/graph/GraphConstructorMapReduceMinHashFeatureOverlappingCluster.java org/viirya/graph/GraphConstructorMapReduceMinHashFeatureFilter.java org/viirya/graph/FloatArrayWritable.java org/viirya/graph/GraphConstructorMapReduceMinHashFeatureFilterPreCompute.java org/viirya/graph/GraphConstructorMapReduceMinHashPreCompute.java org/viirya/graph/GraphConstructorMapReduceMinHashPreComputeProgressive.java
JAVA_DEP = /etc/alternatives/hadoop-lib/hadoop-0.20.1+169.113-core.jar:.

all: ${SRC}
	rm -rf ${OUTPUT_DIR}
	mkdir ${OUTPUT_DIR}
	javac -classpath ${JAVA_DEP} ${SRC} -d ${OUTPUT_DIR}
	jar -cfv ${OUTPUT_JAR} -C ${OUTPUT_DIR} .

clean:
	hadoop dfs -rmr output/graph_data/*

#	hadoop dfs -rmr output/graph_data/adl
#	hadoop dfs -rm output/graph_data/adl_output
#	hadoop dfs -rm output/graph_data/images_number_output
#	hadoop dfs -rmr output/graph_data/tf
#	hadoop dfs -rmr output/graph_data/idf
#	hadoop dfs -rmr output/graph_data/inverted_list
#	hadoop dfs -rmr output/graph_data/graph
    
run:
	hadoop jar ${OUTPUT_JAR} org.viirya.graph.GraphConstructorMapReduce data/flickr550/features/flickr550.full_size_HA_1M_vw_by_flicrk11k 0.001 compress

#data/flickr550/features/flickr550.textual 0.0005 compress

#data/flickr550/features/flickr550.full_size_HA_1M_vw_by_flicrk11k 0.0009 compress
 
run_min_hash:
	hadoop jar ${OUTPUT_JAR} org.viirya.graph.GraphConstructorMapReduceMinHash data/flickr550/features/flickr550.full_size_HA_1M_vw_by_flicrk11k output/test/reassigned 0.002 0 compress

run_min_hash_filter_pre:
	hadoop jar ${OUTPUT_JAR} org.viirya.graph.GraphConstructorMapReduceMinHashPreComputeProgressive output/sampled_features output/test/reassigned 0.002 0 compress
 
#data/flickr550/image_pools/flickr550.full_size_HA_1M_vw_by_flicrk11k/iterate1 0.002 0 compress

run_min_hash_feature:
	hadoop jar ${OUTPUT_JAR} org.viirya.graph.GraphConstructorMapReduceMinHashFeature data/flickr550/features/flickr550.full_size_HA_1M_vw_by_flicrk11k output/test/reassigned 0.002 compress

run_min_hash_feature_overlapping:
	hadoop jar ${OUTPUT_JAR} org.viirya.graph.GraphConstructorMapReduceMinHashFeatureOverlappingCluster data/flickr550/features/flickr550.full_size_HA_1M_vw_by_flicrk11k output/test 0.001 compress
 

run_f11k:
	hadoop jar ${OUTPUT_JAR} org.viirya.graph.GraphConstructorMapReduce data/flickr11k/features/DoG10k_sparse 0.0001 compress
 
run_min_hash_f11k:
	hadoop jar ${OUTPUT_JAR} org.viirya.graph.GraphConstructorMapReduceMinHash data/flickr11k/features/DoG10k_sparse data/flickr11k/image_pools/DoG10k_sparse/iterate9 0.0001 0 compress

run_min_hash_filter_f11k:
	hadoop jar ${OUTPUT_JAR} org.viirya.graph.GraphConstructorMapReduceMinHashFeatureFilter data/flickr11k/features/DoG10k_sparse data/flickr11k/image_pools/DoG10k_sparse/iterate9 0.0001 0 compress

run_min_hash_filter_pre_f11k:
	hadoop jar ${OUTPUT_JAR} org.viirya.graph.GraphConstructorMapReduceMinHashFeatureFilterPreCompute data/flickr11k/features/DoG10k_sparse data/flickr11k/image_pools/DoG10k_sparse/iterate9 0.0001 0 compress

 
#data/flickr550/features/flickr550.textual 0.01 compress
 
#data/flickr550/features/flickr550.full_size_HA_1M_vw_by_flicrk11k 0.01 compress

#data/flickr550/features/Flickr550_psedoobj_normalized 0.1 compress

#data/flickr550/features/flickr550.textual 0.005 compress

#data/flickr550/features/Flickr550_psedoobj_normalized 0.01 compress

#data/Flickr550_psedoobj_normalized 0.005 compress

#data/flickr550.full_size_HA_1M_vw_by_flicrk11k 0.002 compress
